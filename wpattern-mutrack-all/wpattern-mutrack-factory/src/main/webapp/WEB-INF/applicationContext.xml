<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:security="http://www.springframework.org/schema/security"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context-4.1.xsd
    http://www.springframework.org/schema/security
    http://www.springframework.org/schema/security/spring-security-3.2.xsd">

    <context:component-scan base-package="org.wpattern.mutrack.factory" />
    
	<security:authentication-manager id="authenticationManager">
		<security:authentication-provider user-service-ref="authService">
			<security:password-encoder ref="passwordEncoder"></security:password-encoder>
		</security:authentication-provider>
	</security:authentication-manager>

	<security:http realm="Protected API" use-expressions="true" auto-config="false"
			create-session="stateless" entry-point-ref="unauthorizedEntryPoint"
			authentication-manager-ref="authenticationManager">
		<security:custom-filter ref="authenticationTokenProcessingFilter" position="FORM_LOGIN_FILTER" />
		<security:intercept-url pattern="/service/public/auth" access="permitAll" />
		<security:intercept-url pattern="/service/private/package/user/*" access="hasRole('user')" />
		<security:intercept-url pattern="/service/private/package/**" access="hasRole('admin')" />
		<security:intercept-url pattern="/service/private/user/**" access="hasRole('admin')" />
	</security:http>

</beans>
